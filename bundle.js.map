{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./scripts/background.js","webpack:///./scripts/sanik.js","webpack:///./scripts/script.js","webpack:///./scripts/sprite.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;ACnEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;;;AAGA;;;;;;;;;;;;;;;;ACxBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,uBAAuB,WAAW;;AAElC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,OAAO,YAAY;AACnB,OAAO,aAAa;AACpB,OAAO,aAAa;AACpB,OAAO,cAAc;AACrB,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,YAAY;AACnB,OAAO,aAAa;AACpB,OAAO,aAAa;AACpB,OAAO,cAAc;AACrB,OAAO,cAAc;AACrB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,cAAc;AACxB,UAAU;AACV;AACA;;AAEA;;;;;;;;;;;;;;;AC9FA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./scripts/script.js\");\n","import Sprite from './sprite';\n\nconst mushroomKingdom = new Image();\nmushroomKingdom.src = './assets/mushroom_kingdom.png';\n\nconst bgDefaults = {\n  image: mushroomKingdom,\n  sourceX: 0,\n  sourceY: 0,\n  sourceWidth: 900,\n  sourceHeight: 300,\n  destX: 0,\n  destY: 0,\n  destWidth: 900,\n  destHeight: 360\n};\n\nexport default class Background extends Sprite {\n  constructor(context, options) {\n    const settings = Object.assign({}, bgDefaults, options);\n    super(context, settings);\n  }\n\n\n}\n","import Sprite from './sprite';\n\nconst sanikImg = new Image();\nsanikImg.src = \"./assets/sonic.png\";\n\nconst sonicOptions = {\n  image: sanikImg,\n  sourceX: 0,\n  sourceY: 0,\n  sourceWidth: 30,\n  sourceHeight: 40,\n  destX: 85,\n  destY: 202,\n  destWidth: 30,\n  destHeight: 40\n};\n\nexport default class Sanik extends Sprite {\n  constructor(ctx, options) {\n    const settings = Object.assign({}, sonicOptions, options);\n    super(ctx, settings);\n    this.facingLeft = false;\n    this.animArray = [{x: 0, w: 0}];\n\n    this.animate = this.animate.bind(this);\n    this.chill = this.chill.bind(this);\n    this.walk = this.walk.bind(this);\n\n  }\n\n  animate() {\n    if (this.animCount % this.speed === 0) {\n      if (this.flipped) {\n        this.facingLeft = !this.facingLeft\n        this.flipped = false;\n      }\n      if (this.facingLeft) {\n        this.animArray = this.leftAnimArr;\n      }\n      // this.unRender();\n      this.sourceWidth = this.animArray[(this.animCount / this.speed) % this.animArray.length].w;\n      this.destWidth = this.sourceWidth;\n      this.sourceX = this.animArray[(this.animCount / this.speed) % this.animArray.length].x;\n      // this.render();\n    }\n  }\n\n  flipImage(arr) {\n    return arr.map((pos) => {\n      return {\n        x: 984 - (pos.x + pos.w),\n        w: pos.w\n      };\n    });\n  }\n\n  chill () {\n    this.sourceY = 20;\n    this.animArray = [\n      {x: 0, w: 30},\n      {x: 35, w: 30},\n      {x: 67, w: 30},\n      {x: 100, w: 30},\n      {x: 130, w: 30}\n    ];\n    this.leftAnimArr = this.flipImage(this.animArray)\n    this.speed = 20;\n    this.animate();\n  }\n\n  walk () {\n    this.sourceY = 62;\n    const walkArr = [\n      {x: 0, w: 30},\n      {x: 35, w: 34},\n      {x: 73, w: 30},\n      {x: 108, w: 30},\n      {x: 138, w: 31},\n      {x: 180, w: 35}\n    ];\n    this.animArray = walkArr.concat(walkArr.reverse());\n    this.leftAnimArr = this.flipImage(this.animArray)\n    this.speed = 10;\n    this.animate();\n  }\n\n  // spin () {\n  //   this.sourceY = 20;\n  //   const spinArr = [\n  //     {x: 204, w: 31},\n  //     {x: }\n  //   ]\n  // }\n\n}\n","// import Sprite from './sprite'\nimport Background from './background';\nimport Sanik from './sanik';\n\nconst canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext(\"2d\");\n\nconst canvasSize = () => {\n  ctx.canvas.width = window.innerWidth * 0.9;\n};\n\ncanvasSize();\n\nwindow.addEventListener('resize', () => {\n  canvasSize();\n});\nconst background = new Background(ctx);\nconst sanik = new Sanik(ctx);\nlet count = 0;\nlet sanikActions = [\n  sanik.chill,\n  // sanik.flip,\n  sanik.walk,\n  // sanik.flip\n];\nwindow.addEventListener('load', () => {\n  sanik.chill();\n  setInterval(() => {\n    background.update();\n    sanik.update();\n    background.unRender();\n    sanik.unRender();\n    background.render();\n    sanik.render();\n    ++count;\n    if (count % 60 === 0) {\n      sanikActions[(count / 60) % sanikActions.length]();\n      if (sanikActions[(count / 60) % sanikActions.length] === undefined) {\n        console.log('whoopsie');\n      }\n    }\n  }, 1000 / 60);\n});\n\nwindow.sanik = sanik;\n","export default class Sprite {\n  constructor(context, options) {\n    // properties\n    this.context = context;\n    this.img = options.image;\n    this.sourceX = options.sourceX;\n    this.sourceY = options.sourceY;\n    this.sourceWidth = options.sourceWidth;\n    this.sourceHeight = options.sourceHeight;\n    this.destX = options.destX;\n    this.destY = options.destY;\n    this.destWidth = options.destWidth;\n    this.destHeight = options.destHeight;\n    this.animCount = 0;\n    this.flipped = false;\n\n    // methods\n    this.moveVert = this.moveVert.bind(this);\n    this.moveHoriz = this.moveHoriz.bind(this);\n    this.unRender = this.unRender.bind(this);\n    this.flip = this.flip.bind(this);\n    this.update = this.update.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  animate () {\n    // meant to be overwritten by child classes\n  }\n\n  moveVert(px) {\n    this.unRender();\n    this.destY += px;\n    this.render();\n  }\n\n  moveHoriz(px) {\n    this.unRender();\n    this.destX += px;\n    this.render();\n  }\n\n  flip() {\n    this.flipped = !this.flipped;\n  }\n\n  unRender() {\n    this.context.clearRect(\n      this.destX,\n      this.destY,\n      this.destWidth,\n      this.destHeight\n    );\n  }\n\n  update () {\n    this.animCount++;\n    this.animate();\n  }\n\n  render () {\n    this.context.drawImage(\n      this.img,\n      this.sourceX,\n      this.sourceY,\n      this.sourceWidth,\n      this.sourceHeight,\n      this.destX,\n      this.destY,\n      this.destWidth,\n      this.destHeight\n    );\n  }\n}\n"],"sourceRoot":""}